version: '2.1'
orbs:
  node: circleci/node@4.5.1
jobs:
  install:
    executor:
      name: node/default
      tag: '16.16.0'

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --immutable
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  test:
    executor:
      name: node/default
      tag: '16.16.0'
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run: yarn lint
      - run: yarn typecheck
      - run: yarn test
      - run: yarn chromatic --project-token=${CHROMATIC_PROJECT_TOKEN}
      - store_test_results:
          path: ./reports/junit.xml
      - store_artifacts:
          path: ./reports/junit.xml

  deploy:
    executor:
      name: node/default
      tag: '16.16.0'

    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run: yarn build
      - run: # Install the AWS CLI if it is not already included in the docker image
          name: Install awscli
          command: |
            cd ..
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            cd repo
      - run: chmod -R +x scripts/ 
      - add_ssh_keys:
          fingerprints:
            - "38:2d:5b:cd:72:c2:24:e2:b2:39:54:5f:a7:a5:8a:4d"
      - run: yarn deploy

workflows:
  pull-request:
    jobs:
      - install:
          name: install
          filters:
            branches:
              ignore: main
      - test:
          name: test
          requires:
            - install

  main:
    jobs:
      - install:
          name: install
          filters:
            branches:
              only: main
      - test:
          name: test
          requires:
            - install
          filters:
            branches:
              only: main
      - deploy:
          name: deploy
          context:
            - AWS
          requires:
            - test
          filters:
            branches:
              only: main